[gd_scene load_steps=15 format=2]

[ext_resource path="res://Shaders/random_noise.shader" type="Shader" id=1]
[ext_resource path="res://Shaders/value_noise.shader" type="Shader" id=2]
[ext_resource path="res://Shaders/perlin_noise.shader" type="Shader" id=3]
[ext_resource path="res://Shaders/voronoi_noise.shader" type="Shader" id=4]
[ext_resource path="res://Shared/DemoInterface.tscn" type="PackedScene" id=5]
[ext_resource path="res://Shared/Background2D/Demo2DBackground.tscn" type="PackedScene" id=6]

[sub_resource type="ShaderMaterial" id=1]
shader = ExtResource( 1 )
shader_param/scale = Vector2( 10, 10 )

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 2 )
shader_param/scale = Vector2( 10, 10 )

[sub_resource type="ShaderMaterial" id=3]
shader = ExtResource( 3 )
shader_param/scale = Vector2( 10, 10 )
shader_param/seamless = true

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 4 )
shader_param/scale = Vector2( 10, 10 )
shader_param/seamless = true

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform sampler2D simplex_noise : hint_black;

void fragment() {
	COLOR = vec4(texture(simplex_noise, UV).rgb, 1.0);
}"

[sub_resource type="OpenSimplexNoise" id=6]
seed = 230

[sub_resource type="NoiseTexture" id=7]
noise = SubResource( 6 )

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 5 )
shader_param/simplex_noise = SubResource( 7 )

[node name="NoiseDemo" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ParallaxBackground" parent="." instance=ExtResource( 6 )]

[node name="CenterContainer" type="CenterContainer" parent="."]
anchor_top = 0.11
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GridContainer" type="GridContainer" parent="CenterContainer"]
margin_left = 310.0
margin_top = 55.0
margin_right = 1610.0
margin_bottom = 905.0
custom_constants/vseparation = 50
custom_constants/hseparation = 50
columns = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RandomNoise" type="ColorRect" parent="CenterContainer/GridContainer"]
material = SubResource( 1 )
margin_right = 400.0
margin_bottom = 400.0
rect_min_size = Vector2( 400, 400 )

[node name="ValueNoise" type="ColorRect" parent="CenterContainer/GridContainer"]
material = SubResource( 2 )
margin_left = 450.0
margin_right = 850.0
margin_bottom = 400.0
rect_min_size = Vector2( 400, 400 )

[node name="PerlinNoise" type="ColorRect" parent="CenterContainer/GridContainer"]
material = SubResource( 3 )
margin_left = 900.0
margin_right = 1300.0
margin_bottom = 400.0
rect_min_size = Vector2( 400, 400 )

[node name="VoronoiNoise" type="ColorRect" parent="CenterContainer/GridContainer"]
material = SubResource( 4 )
margin_top = 450.0
margin_right = 400.0
margin_bottom = 850.0
rect_min_size = Vector2( 400, 400 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SimplexNoise" type="ColorRect" parent="CenterContainer/GridContainer"]
material = SubResource( 8 )
margin_left = 450.0
margin_top = 450.0
margin_right = 850.0
margin_bottom = 850.0
rect_min_size = Vector2( 400, 400 )

[node name="DemoInterface" parent="." instance=ExtResource( 5 )]
anchor_right = 0.0
margin_right = 1920.0
rect_min_size = Vector2( 0, 120 )
text_bbcode = "Several types of random noise.

Shader code and fantastic explanations provided by Gonkee (https://github.com/Gonkee/)"
